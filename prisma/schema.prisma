// Prisma schema for authenticated chat with persistence

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  passwordHash String
  name         String
  createdAt    DateTime  @default(now())

  rooms        Room[]    @relation("RoomOwner")
  memberships  Membership[]
  messages     Message[]
}

model Room {
  id        Int          @id @default(autoincrement())
  code      String       @unique
  ownerId   Int
  owner     User         @relation("RoomOwner", fields: [ownerId], references: [id])
  createdAt DateTime     @default(now())

  memberships Membership[]
  messages     Message[]
}

model Membership {
  id        Int      @id @default(autoincrement())
  userId    Int
  roomId    Int
  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  room   Room @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId])
}

model Message {
  id        Int       @id @default(autoincrement())
  roomId    Int
  userId    Int
  text      String
  createdAt DateTime  @default(now())
  deletedAt DateTime? // soft delete

  // Optional attachment fields
  attachmentUrl  String?
  attachmentType String? // 'image' | 'video' | 'file'
  attachmentName String?
  attachmentSize Int?
  attachmentMime String?

  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@index([roomId, createdAt])
}